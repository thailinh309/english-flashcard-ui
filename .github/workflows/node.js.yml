# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
  build:
    name: build
    runs-on: self-hosted
    steps:
    
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - uses: actions/checkout@v2
      
      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install --frozen-lockfile
          
      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: build
          
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - uses: docker/setup-buildx-action@v1
      
      - name: Create the Time Tag
        run: echo "TIME_VERSION_TAG=$(date +'%Y').$(( `date +'%m'` / 6 + 1 ))" >> $GITHUB_ENV
      
      - uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/english-flashcard-ui:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/english-flashcard-ui:${{env.TIME_VERSION_TAG}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          
      - name: Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
